version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres1
    restart: always
    environment:
      POSTGRES_USER: agri_user
      POSTGRES_PASSWORD: agri_pass
      POSTGRES_DB: agri_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend1
    ports:
      - "8080:8080"
    environment:
      - python.venv_path=/app/script_python/venv
      - python.scripts_dir=/app/script_python
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/agri_db
      - SPRING_DATASOURCE_USERNAME=agri_user
      - SPRING_DATASOURCE_PASSWORD=agri_pass
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend1
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    command: sh -c "if [ ! -d node_modules ]; then npm install; fi && npm run dev"
    stdin_open: true
    tty: true
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
