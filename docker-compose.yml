version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres-ci
    restart: always
    environment:
      POSTGRES_USER: agri_user
      POSTGRES_PASSWORD: agri_pass
      POSTGRES_DB: agri_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend-ci
    ports:
      - "8080:8080"
    environment:
      - python.venv_path=/app/script_python/venv
      - python.scripts_dir=/app/script_python
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/agri_db
      - SPRING_DATASOURCE_USERNAME=agri_user
      - SPRING_DATASOURCE_PASSWORD=agri_pass
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend-ci
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - BACKEND_INTERNAL_URL=http://backend:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins-ci
    user: root
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

volumes:
  pgdata:
  jenkins_home:

networks:
  app-network:
    driver: bridge
